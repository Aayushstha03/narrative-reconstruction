services:
  db:
    image: postgres
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database-1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init/:/docker-entrypoint-initdb.d/

  app:
    build: .
    container_name: app

    develop:
      watch:
        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests

    depends_on:
      - db
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      POSTGRES_HOST: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database-1
    tty: true

  scraper-worker:
    build: .
    container_name: scraper-worker

    develop:
      watch:
        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    volumes:
      - ./scraper:/app/scraper

    depends_on:
      - db
      - redis

    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database-1
    command: uv run celery -A scraper.celery_app worker --loglevel=info
    tty: true

  celery-beat:
    build: .
    container_name: celery-beat

    develop:
      watch:
        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    volumes:
      - ./scraper:/app/scraper

    depends_on:
      - db
      - redis

    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database-1
    command: uv run celery -A scraper.celery_app beat --loglevel=info
    tty: true

  api:
    build: .
    container_name: api
    command: uv run uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database-1
    depends_on:
      - db
    volumes:
      - ./api:/app/api
    tty: true

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis-data:/data
    command: redis-server

volumes:
  postgres_data:
  redis-data:
