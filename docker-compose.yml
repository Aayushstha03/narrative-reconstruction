services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
  celery_worker:
    build: .
    image: narrative-reconstruction:latest
    command: uv run celery -A src.bg_tasks.celery_worker.celery_app worker --loglevel=info
    volumes:
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
  flower:
    build: .
    image: narrative-reconstruction:latest
    command: uv run celery --broker=redis://redis:6379/0 -A src.bg_tasks.celery_worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
  app:
    build: .
    image: narrative-reconstruction:latest
    command: uv run fastapi dev src/api/main.py --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
      flower:
        condition: service_started
      db:
        condition: service_started

    volumes:
      - ./src:/app/src

  db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sampledb
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init:/app/init
      - ./pyproject.toml:/app/pyproject.toml
