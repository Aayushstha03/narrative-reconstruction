services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
      - ./pyproject.toml:/app/pyproject.toml

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"

    develop:
      watch:
        - action: rebuild
          path: ./pyproject.toml

    depends_on:
      - db
    environment:
      DB_NAME: mydatabase
      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./src:/app/src

  redis:
    container_name: redis
    image: redis:8.2-alpine

  celery_worker:
    container_name: celery_worker
    build: .
    command: uv run celery -A src.celery_worker.celery_app worker --loglevel=info
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    depends_on:
      - app
      - redis
      # flower:
      # container_name: flower
      # build: .
      # command: uv run celery -A src.celery_worker.celery_app flower --port=5555
      # ports:
      # - "5555:5555"
      # environment:
      # - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      # - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      # depends_on:
      # - app
      # - redis
      # - celery_worker
      #
